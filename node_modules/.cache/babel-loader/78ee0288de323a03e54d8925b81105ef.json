{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/yarlo/Documentos/GitHub/estuduante/src/components/dashboard-card-overview/dashboard-card-overview.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestore } from '../../firebase/firebase.utilis';\nimport { selectCurrentUser } from '../../redux/user/user.selector';\nimport { totalAvarage } from '../../utilities';\nimport DashBoardCard from \"../dashboard-card/dashboard-card.component\";\nconst card = [1, 2, 3];\n\nconst DashboardCardOverview = ({\n  lastResult,\n  user\n}) => {\n  _s();\n\n  const [average, setAverage] = useState();\n  console.log(lastResult);\n  useEffect(() => {\n    if (user) {\n      const getData = async () => {\n        const docRef = await firestore.doc(`users/${user.id}`).get();\n        const data = docRef.data();\n        setAverage(data.average);\n        console.log(data.average);\n      };\n\n      getData();\n    }\n  }, [user]);\n  return lastResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(DashBoardCard, {\n      average: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DashboardCardOverview, \"li7N3JN0jK9n8zOhl6KU0ubaZ2o=\");\n\n_c = DashboardCardOverview;\n\nconst mapStateToProps = state => ({\n  user: selectCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(DashboardCardOverview);\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardCardOverview\");","map":{"version":3,"sources":["/home/yarlo/Documentos/GitHub/estuduante/src/components/dashboard-card-overview/dashboard-card-overview.component.jsx"],"names":["useState","useEffect","connect","firestore","selectCurrentUser","totalAvarage","DashBoardCard","card","DashboardCardOverview","lastResult","user","average","setAverage","console","log","getData","docRef","doc","id","get","data","mapStateToProps","state"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AAEA,MAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AAAA;;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAGAR,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIS,IAAJ,EAAU;AACN,YAAMK,OAAO,GAAG,YAAY;AACxB,cAAMC,MAAM,GAAG,MAAMb,SAAS,CAACc,GAAV,CAAe,SAAQP,IAAI,CAACQ,EAAG,EAA/B,EAAkCC,GAAlC,EAArB;AACA,cAAMC,IAAI,GAAGJ,MAAM,CAACI,IAAP,EAAb;AACAR,QAAAA,UAAU,CAACQ,IAAI,CAACT,OAAN,CAAV;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACT,OAAjB;AAEH,OAND;;AAQAI,MAAAA,OAAO;AACV;AAGJ,GAfQ,EAeN,CAACL,IAAD,CAfM,CAAT;AAqBA,SAAOD,UAAU,gBACb;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADa,gBAIZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJL;AAKH,CA/BD;;GAAMH,qB;;KAAAA,qB;;AAgCN,MAAMa,eAAe,GAAGC,KAAK,KAAK;AAC9BZ,EAAAA,IAAI,EAAEN,iBAAiB,CAACkB,KAAD;AADO,CAAL,CAA7B;;AAGA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBb,qBAAzB,CAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestore } from '../../firebase/firebase.utilis';\nimport { selectCurrentUser } from '../../redux/user/user.selector';\nimport { totalAvarage } from '../../utilities';\nimport DashBoardCard from \"../dashboard-card/dashboard-card.component\";\n\nconst card = [1, 2, 3]\n\nconst DashboardCardOverview = ({ lastResult, user }) => {\n    const [average, setAverage] = useState();\n    console.log(lastResult)\n\n\n    useEffect(() => {\n\n        if (user) {\n            const getData = async () => {\n                const docRef = await firestore.doc(`users/${user.id}`).get();\n                const data = docRef.data();\n                setAverage(data.average)\n                console.log(data.average)\n\n            }\n\n            getData()\n        }\n\n\n    }, [user])\n\n\n\n\n\n    return lastResult ? (\n        <div className=\"row\">\n            <DashBoardCard average={average} />\n        </div>\n    ) : (<div>Loading...</div>);\n}\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\nexport default connect(mapStateToProps)(DashboardCardOverview);"]},"metadata":{},"sourceType":"module"}