{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/yarlo/Documentos/GitHub/estuduante/src/pages/dashboard/dashboard.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport DarkTable from \"../../components/dark-table/dark-table.component\";\nimport DashboardCardOverview from \"../../components/dashboard-card-overview/dashboard-card-overview.component\";\nimport { firestore, getResult } from '../../firebase/firebase.utilis';\nimport { selectCurrentUser } from '../../redux/user/user.selector';\n\nconst Homepage = ({\n  user\n}) => {\n  _s();\n\n  const [lastResult, setLastResult] = useState();\n  const [userData, setUserData] = useState();\n  useEffect(() => {\n    const getResult = async () => {\n      const docRef = firestore.doc('result/0Lsbc5zdNsXsMJHSeP1u');\n      const data = await docRef.get();\n      console.log(data.data());\n    };\n\n    getResult();\n  }, []);\n  useEffect(() => {\n    if (user) {\n      const getData = async () => {\n        if (user) {\n          const docRef = await getResult(user.id);\n          docRef.onSnapshot(el => {\n            setLastResult(el.data().result);\n          });\n        }\n      };\n\n      getData();\n      setUserData(user);\n    } else {\n      setUserData(null);\n    }\n  }, [userData]);\n  window.value = 12;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardCardOverview, {\n      lastResult: lastResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DarkTable, {\n      lastResult: lastResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Homepage, \"Yz4wFJ5IHFxk2q6Jt8YUuqpkZ0I=\");\n\n_c = Homepage;\n\nconst mapStateToProps = state => ({\n  user: selectCurrentUser(state)\n});\n\nexport default connect(mapStateToProps)(Homepage);\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/home/yarlo/Documentos/GitHub/estuduante/src/pages/dashboard/dashboard.component.jsx"],"names":["useState","useEffect","connect","DarkTable","DashboardCardOverview","firestore","getResult","selectCurrentUser","Homepage","user","lastResult","setLastResult","userData","setUserData","docRef","doc","data","get","console","log","getData","id","onSnapshot","el","result","window","value","mapStateToProps","state"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,qBAAP,MAAkC,4EAAlC;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,gCAArC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,EAA5C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,SAAS,GAAG,YAAY;AAC1B,YAAMQ,MAAM,GAAGT,SAAS,CAACU,GAAV,CAAc,6BAAd,CAAf;AACA,YAAMC,IAAI,GAAG,MAAMF,MAAM,CAACG,GAAP,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAL,EAAZ;AAEH,KALD;;AAMAV,IAAAA,SAAS;AACZ,GARQ,EAQN,EARM,CAAT;AASAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAJ,EAAU;AACN,YAAMW,OAAO,GAAG,YAAY;AACxB,YAAIX,IAAJ,EAAU;AACN,gBAAMK,MAAM,GAAG,MAAMR,SAAS,CAACG,IAAI,CAACY,EAAN,CAA9B;AACAP,UAAAA,MAAM,CAACQ,UAAP,CAAkBC,EAAE,IAAI;AACpBZ,YAAAA,aAAa,CAACY,EAAE,CAACP,IAAH,GAAUQ,MAAX,CAAb;AACH,WAFD;AAIH;AAGJ,OAVD;;AAWAJ,MAAAA,OAAO;AACPP,MAAAA,WAAW,CAACJ,IAAD,CAAX;AACH,KAdD,MAcO;AACHI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AAGJ,GApBQ,EAoBN,CAACD,QAAD,CApBM,CAAT;AAsBAa,EAAAA,MAAM,CAACC,KAAP,GAAe,EAAf;AAIA,sBACI;AAAA,4BACI,QAAC,qBAAD;AAAuB,MAAA,UAAU,EAAEhB;AAAnC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AASH,CAhDD;;GAAMF,Q;;KAAAA,Q;;AAiDN,MAAMmB,eAAe,GAAGC,KAAK,KAAK;AAC9BnB,EAAAA,IAAI,EAAEF,iBAAiB,CAACqB,KAAD;AADO,CAAL,CAA7B;;AAGA,eAAe1B,OAAO,CAACyB,eAAD,CAAP,CAAyBnB,QAAzB,CAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport DarkTable from \"../../components/dark-table/dark-table.component\";\nimport DashboardCardOverview from \"../../components/dashboard-card-overview/dashboard-card-overview.component\";\n\nimport { firestore, getResult } from '../../firebase/firebase.utilis'\nimport { selectCurrentUser } from '../../redux/user/user.selector';\n\nconst Homepage = ({ user }) => {\n    const [lastResult, setLastResult] = useState();\n    const [userData, setUserData] = useState()\n\n    useEffect(() => {\n        const getResult = async () => {\n            const docRef = firestore.doc('result/0Lsbc5zdNsXsMJHSeP1u');\n            const data = await docRef.get();\n            console.log(data.data())\n\n        }\n        getResult()\n    }, [])\n    useEffect(() => {\n        if (user) {\n            const getData = async () => {\n                if (user) {\n                    const docRef = await getResult(user.id);\n                    docRef.onSnapshot(el => {\n                        setLastResult(el.data().result)\n                    })\n\n                }\n\n\n            }\n            getData();\n            setUserData(user)\n        } else {\n            setUserData(null)\n        }\n\n\n    }, [userData])\n\n    window.value = 12\n\n\n   \n    return (\n        <>\n            <DashboardCardOverview lastResult={lastResult} />\n            <DarkTable lastResult={lastResult} />\n\n        </>\n\n\n    );\n}\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\nexport default connect(mapStateToProps)(Homepage);"]},"metadata":{},"sourceType":"module"}