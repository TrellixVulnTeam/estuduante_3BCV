{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/yarlo/Documentos/APP/quiz-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useReducer}from'react';import'./quiz.styles.scss';import{connect}from'react-redux';import{increaseNumber}from'../../redux/result/result.action';function reducer(state,action){switch(action.type){case\"set\":return action.payload;case\"unMount\":console.log(state);// This note has been closed: 201\nbreak;default:throw new Error();}}var Quiz=function Quiz(_ref){var question=_ref.question,questionOption=_ref.questionOption,increase=_ref.increase;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),option=_useState2[0],setOption=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),answer=_useState4[0],setAnswer=_useState4[1];var _useState5=useState(questionOption),_useState6=_slicedToArray(_useState5,2),questionOptionUn=_useState6[0],setquestionOptionUn=_useState6[1];var problem=option;var answerArr=questionOptionUn;var _useReducer=useReducer(reducer,'nothing'),_useReducer2=_slicedToArray(_useReducer,2),value=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){dispatch({type:\"set\",payload:option});return function(){var correctAnswer=answerArr.filter(function(el){return!el.isCorrect===true;});console.log(correctAnswer);//console.log(correctAnswer)\n//if (answer.isCorrect === )\nincrease();dispatch({type:\"unMount\"});};},[option]);return/*#__PURE__*/_jsxs(\"div\",{className:\"col-12 col-md-7 m-auto\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"quiz-question\",children:question}),/*#__PURE__*/_jsx(\"span\",{onClick:increase,children:value}),questionOption.map(function(el){return/*#__PURE__*/_jsx(\"div\",{className:\"quiz-option \".concat(option===el.option?'active-option':''),onClick:function onClick(){setOption(el.option);setAnswer(el);},children:el.option});})]});};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{increase:function increase(){return dispatch(increaseNumber());}};};export default connect(null,mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["/home/yarlo/Documentos/APP/quiz-final/src/components/quiz/quiz.component.jsx"],"names":["useState","useEffect","useReducer","connect","increaseNumber","reducer","state","action","type","payload","console","log","Error","Quiz","question","questionOption","increase","undefined","option","setOption","answer","setAnswer","questionOptionUn","setquestionOptionUn","problem","answerArr","value","dispatch","correctAnswer","filter","el","isCorrect","map","mapDispatchToProps"],"mappings":"oPAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,UAA9B,KAAgD,OAAhD,CACA,MAAO,oBAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAT,KAA+B,kCAA/B,CAGA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,MAAxB,CAAgC,CAC5B,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,KAAL,CACI,MAAOD,CAAAA,MAAM,CAACE,OAAd,CACJ,IAAK,SAAL,CACIC,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAoB;AACpB,MACJ,QACI,KAAM,IAAIM,CAAAA,KAAJ,EAAN,CAPR,CASH,CAED,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA4C,IAAzCC,CAAAA,QAAyC,MAAzCA,QAAyC,CAA/BC,cAA+B,MAA/BA,cAA+B,CAAfC,QAAe,MAAfA,QAAe,eACzBhB,QAAQ,CAACiB,SAAD,CADiB,wCAC9CC,MAD8C,eACtCC,SADsC,8BAEzBnB,QAAQ,EAFiB,yCAE9CoB,MAF8C,eAEtCC,SAFsC,8BAGLrB,QAAQ,CAACe,cAAD,CAHH,yCAG9CO,gBAH8C,eAG5BC,mBAH4B,eAIrD,GAAIC,CAAAA,OAAO,CAAGN,MAAd,CACA,GAAIO,CAAAA,SAAS,CAAGH,gBAAhB,CALqD,gBAM3BpB,UAAU,CAACG,OAAD,CAAU,SAAV,CANiB,4CAM9CqB,KAN8C,iBAMvCC,QANuC,iBAOrD1B,SAAS,CAAC,UAAM,CACZ0B,QAAQ,CAAC,CAAEnB,IAAI,CAAE,KAAR,CAAeC,OAAO,CAAES,MAAxB,CAAD,CAAR,CACA,MAAO,WAAM,CAET,GAAMU,CAAAA,aAAa,CAAGH,SAAS,CAACI,MAAV,CAAiB,SAAAC,EAAE,QAAI,CAACA,EAAE,CAACC,SAAJ,GAAkB,IAAtB,EAAnB,CAAtB,CACArB,OAAO,CAACC,GAAR,CAAYiB,aAAZ,EACA;AACA;AAEAZ,QAAQ,GAERW,QAAQ,CAAC,CAAEnB,IAAI,CAAE,SAAR,CAAD,CAAR,CACH,CAVD,CAWH,CAbQ,CAaN,CAACU,MAAD,CAbM,CAAT,CAcA,mBACI,aAAK,SAAS,CAAC,wBAAf,wBACI,WAAI,SAAS,CAAC,eAAd,UAA+BJ,QAA/B,EADJ,cAEI,aAAM,OAAO,CAAEE,QAAf,UAA0BU,KAA1B,EAFJ,CAIQX,cAAc,CAACiB,GAAf,CAAmB,SAAAF,EAAE,qBAAI,YAAK,SAAS,uBAAiBZ,MAAM,GAAKY,EAAE,CAACZ,MAAd,CAAuB,eAAvB,CAAyC,EAA1D,CAAd,CAA8E,OAAO,CAAE,kBAAM,CAClHC,SAAS,CAACW,EAAE,CAACZ,MAAJ,CAAT,CACAG,SAAS,CAACS,EAAD,CAAT,CAEH,CAJwB,UAIpBA,EAAE,CAACZ,MAJiB,EAAJ,EAArB,CAJR,GADJ,CAaH,CAlCD,CAoCA,GAAMe,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAN,QAAQ,QAAK,CACpCX,QAAQ,CAAE,0BAAMW,CAAAA,QAAQ,CAACvB,cAAc,EAAf,CAAd,EAD0B,CAAL,EAAnC,CAIA,cAAeD,CAAAA,OAAO,CAAC,IAAD,CAAO8B,kBAAP,CAAP,CAAkCpB,IAAlC,CAAf","sourcesContent":["import { useState, useEffect, useReducer } from 'react'\nimport './quiz.styles.scss';\nimport { connect } from 'react-redux';\nimport { increaseNumber } from '../../redux/result/result.action';\n\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"set\":\n            return action.payload;\n        case \"unMount\":\n            console.log(state); // This note has been closed: 201\n            break;\n        default:\n            throw new Error();\n    }\n}\n\nconst Quiz = ({ question, questionOption, increase }) => {\n    const [option, setOption] = useState(undefined)\n    const [answer, setAnswer] = useState();\n    const [questionOptionUn, setquestionOptionUn] = useState(questionOption);\n    let problem = option;\n    let answerArr = questionOptionUn;\n    const [value, dispatch] = useReducer(reducer, 'nothing')\n    useEffect(() => {\n        dispatch({ type: \"set\", payload: option });\n        return () => {\n\n            const correctAnswer = answerArr.filter(el => !el.isCorrect === true)\n            console.log(correctAnswer)\n            //console.log(correctAnswer)\n            //if (answer.isCorrect === )\n\n            increase()\n\n            dispatch({ type: \"unMount\" });\n        }\n    }, [option])\n    return (\n        <div className=\"col-12 col-md-7 m-auto\" >\n            <h3 className=\"quiz-question\">{question}</h3>\n            <span onClick={increase}>{value}</span>\n            {\n                questionOption.map(el => <div className={`quiz-option ${option === el.option ? 'active-option' : ''}`} onClick={() => {\n                    setOption(el.option);\n                    setAnswer(el)\n\n                }} >{el.option}</div>)\n            }\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    increase: () => dispatch(increaseNumber())\n})\n\nexport default connect(null, mapDispatchToProps)(Quiz);\n"]},"metadata":{},"sourceType":"module"}