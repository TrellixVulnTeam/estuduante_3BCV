{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/yarlo/Documentos/APP/quiz-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/yarlo/Documentos/APP/quiz-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/yarlo/Documentos/APP/quiz-final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{connect}from'react-redux';import{firestore}from'../../firebase/firebase.utilis';import{selectCurrentUser}from'../../redux/user/user.selector';import{totalAvarage}from'../../utilities';import DashBoardCard from\"../dashboard-card/dashboard-card.component\";var card=[1,2,3];var DashboardCardOverview=function DashboardCardOverview(_ref){var lastResult=_ref.lastResult,user=_ref.user;var _useState=useState(),_useState2=_slicedToArray(_useState,2),average=_useState2[0],setAverage=_useState2[1];console.log(lastResult);useEffect(function(){if(user){var getData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var docRef,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return firestore.doc(\"users/\".concat(user.id)).get();case 2:docRef=_context.sent;data=docRef.data();setAverage(data.average);console.log(data.average);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getData(){return _ref2.apply(this,arguments);};}();getData();}},[user]);return lastResult?/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(DashBoardCard,{average:average})}):/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});};var mapStateToProps=function mapStateToProps(state){return{user:selectCurrentUser(state)};};export default connect(mapStateToProps)(DashboardCardOverview);","map":{"version":3,"sources":["/home/yarlo/Documentos/APP/quiz-final/src/components/dashboard-card-overview/dashboard-card-overview.component.jsx"],"names":["useState","useEffect","connect","firestore","selectCurrentUser","totalAvarage","DashBoardCard","card","DashboardCardOverview","lastResult","user","average","setAverage","console","log","getData","doc","id","get","docRef","data","mapStateToProps","state"],"mappings":"4fAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,KAA0B,gCAA1B,CACA,OAASC,iBAAT,KAAkC,gCAAlC,CACA,OAASC,YAAT,KAA6B,iBAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,4CAA1B,CAEA,GAAMC,CAAAA,IAAI,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAb,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,MAA0B,IAAvBC,CAAAA,UAAuB,MAAvBA,UAAuB,CAAXC,IAAW,MAAXA,IAAW,eACtBV,QAAQ,EADc,wCAC7CW,OAD6C,eACpCC,UADoC,eAEpDC,OAAO,CAACC,GAAR,CAAYL,UAAZ,EAGAR,SAAS,CAAC,UAAM,CAEZ,GAAIS,IAAJ,CAAU,CACN,GAAMK,CAAAA,OAAO,2FAAG,yKACSZ,CAAAA,SAAS,CAACa,GAAV,iBAAuBN,IAAI,CAACO,EAA5B,GAAkCC,GAAlC,EADT,QACNC,MADM,eAENC,IAFM,CAECD,MAAM,CAACC,IAAP,EAFD,CAGZR,UAAU,CAACQ,IAAI,CAACT,OAAN,CAAV,CACAE,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACT,OAAjB,EAJY,sDAAH,kBAAPI,CAAAA,OAAO,2CAAb,CAQAA,OAAO,GACV,CAGJ,CAfQ,CAeN,CAACL,IAAD,CAfM,CAAT,CAqBA,MAAOD,CAAAA,UAAU,cACb,YAAK,SAAS,CAAC,KAAf,uBACI,KAAC,aAAD,EAAe,OAAO,CAAEE,OAAxB,EADJ,EADa,cAIZ,mCAJL,CAKH,CA/BD,CAgCA,GAAMU,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BZ,IAAI,CAAEN,iBAAiB,CAACkB,KAAD,CADO,CAAL,EAA7B,CAGA,cAAepB,CAAAA,OAAO,CAACmB,eAAD,CAAP,CAAyBb,qBAAzB,CAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestore } from '../../firebase/firebase.utilis';\nimport { selectCurrentUser } from '../../redux/user/user.selector';\nimport { totalAvarage } from '../../utilities';\nimport DashBoardCard from \"../dashboard-card/dashboard-card.component\";\n\nconst card = [1, 2, 3]\n\nconst DashboardCardOverview = ({ lastResult, user }) => {\n    const [average, setAverage] = useState();\n    console.log(lastResult)\n\n\n    useEffect(() => {\n\n        if (user) {\n            const getData = async () => {\n                const docRef = await firestore.doc(`users/${user.id}`).get();\n                const data = docRef.data();\n                setAverage(data.average)\n                console.log(data.average)\n\n            }\n\n            getData()\n        }\n\n\n    }, [user])\n\n\n\n\n\n    return lastResult ? (\n        <div className=\"row\">\n            <DashBoardCard average={average} />\n        </div>\n    ) : (<div>Loading...</div>);\n}\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\nexport default connect(mapStateToProps)(DashboardCardOverview);"]},"metadata":{},"sourceType":"module"}