{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/yarlo/Documentos/GitHub/estuduante/src/components/quiz/quiz.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useReducer } from 'react';\nimport './quiz.styles.scss';\nimport { connect } from 'react-redux';\nimport { increaseNumber } from '../../redux/result/result.action';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"set\":\n      return action.payload;\n\n    case \"unMount\":\n      console.log(state); // This note has been closed: 201\n\n      break;\n\n    default:\n      throw new Error();\n  }\n}\n\nconst Quiz = ({\n  question,\n  questionOption,\n  increase\n}) => {\n  _s();\n\n  const [option, setOption] = useState(undefined);\n  const [answer, setAnswer] = useState();\n  const [questionOptionUn, setquestionOptionUn] = useState(questionOption);\n  let problem = option;\n  let answerArr = questionOptionUn;\n  const [value, dispatch] = useReducer(reducer, 'nothing');\n  useEffect(() => {\n    dispatch({\n      type: \"set\",\n      payload: option\n    });\n    return () => {\n      const correctAnswer = answerArr.filter(el => !el.isCorrect === true);\n      console.log(correctAnswer); //console.log(correctAnswer)\n      //if (answer.isCorrect === )\n\n      increase();\n      dispatch({\n        type: \"unMount\"\n      });\n    };\n  }, [option]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-md-7 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"quiz-question\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: increase,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), questionOption.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `quiz-option ${option === el.option ? 'active-option' : ''}`,\n      onClick: () => {\n        setOption(el.option);\n        setAnswer(el);\n      },\n      children: el.option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 42\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quiz, \"gwuVad3cVqQjazlDytgUcb53rzU=\");\n\n_c = Quiz;\n\nconst mapDispatchToProps = dispatch => ({\n  increase: () => dispatch(increaseNumber())\n});\n\nexport default connect(null, mapDispatchToProps)(Quiz);\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/yarlo/Documentos/GitHub/estuduante/src/components/quiz/quiz.component.jsx"],"names":["useState","useEffect","useReducer","connect","increaseNumber","reducer","state","action","type","payload","console","log","Error","Quiz","question","questionOption","increase","option","setOption","undefined","answer","setAnswer","questionOptionUn","setquestionOptionUn","problem","answerArr","value","dispatch","correctAnswer","filter","el","isCorrect","map","mapDispatchToProps"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kCAA/B;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAOD,MAAM,CAACE,OAAd;;AACJ,SAAK,SAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EADJ,CACwB;;AACpB;;AACJ;AACI,YAAM,IAAIM,KAAJ,EAAN;AAPR;AASH;;AAED,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,cAAZ;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAAA;;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAACmB,SAAD,CAApC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,EAApC;AACA,QAAM,CAACsB,gBAAD,EAAmBC,mBAAnB,IAA0CvB,QAAQ,CAACe,cAAD,CAAxD;AACA,MAAIS,OAAO,GAAGP,MAAd;AACA,MAAIQ,SAAS,GAAGH,gBAAhB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBzB,UAAU,CAACG,OAAD,EAAU,SAAV,CAApC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ,CAAC;AAAEnB,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAEQ;AAAxB,KAAD,CAAR;AACA,WAAO,MAAM;AAET,YAAMW,aAAa,GAAGH,SAAS,CAACI,MAAV,CAAiBC,EAAE,IAAI,CAACA,EAAE,CAACC,SAAJ,KAAkB,IAAzC,CAAtB;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,aAAZ,EAHS,CAIT;AACA;;AAEAZ,MAAAA,QAAQ;AAERW,MAAAA,QAAQ,CAAC;AAAEnB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KAVD;AAWH,GAbQ,EAaN,CAACS,MAAD,CAbM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,gBAA+BH;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,OAAO,EAAEE,QAAf;AAAA,gBAA0BU;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIQX,cAAc,CAACiB,GAAf,CAAmBF,EAAE,iBAAI;AAAK,MAAA,SAAS,EAAG,eAAcb,MAAM,KAAKa,EAAE,CAACb,MAAd,GAAuB,eAAvB,GAAyC,EAAG,EAA3E;AAA8E,MAAA,OAAO,EAAE,MAAM;AAClHC,QAAAA,SAAS,CAACY,EAAE,CAACb,MAAJ,CAAT;AACAI,QAAAA,SAAS,CAACS,EAAD,CAAT;AAEH,OAJwB;AAAA,gBAIpBA,EAAE,CAACb;AAJiB;AAAA;AAAA;AAAA;AAAA,YAAzB,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlCD;;GAAMJ,I;;KAAAA,I;;AAoCN,MAAMoB,kBAAkB,GAAGN,QAAQ,KAAK;AACpCX,EAAAA,QAAQ,EAAE,MAAMW,QAAQ,CAACvB,cAAc,EAAf;AADY,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAO8B,kBAAP,CAAP,CAAkCpB,IAAlC,CAAf","sourcesContent":["import { useState, useEffect, useReducer } from 'react'\nimport './quiz.styles.scss';\nimport { connect } from 'react-redux';\nimport { increaseNumber } from '../../redux/result/result.action';\n\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"set\":\n            return action.payload;\n        case \"unMount\":\n            console.log(state); // This note has been closed: 201\n            break;\n        default:\n            throw new Error();\n    }\n}\n\nconst Quiz = ({ question, questionOption, increase }) => {\n    const [option, setOption] = useState(undefined)\n    const [answer, setAnswer] = useState();\n    const [questionOptionUn, setquestionOptionUn] = useState(questionOption);\n    let problem = option;\n    let answerArr = questionOptionUn;\n    const [value, dispatch] = useReducer(reducer, 'nothing')\n    useEffect(() => {\n        dispatch({ type: \"set\", payload: option });\n        return () => {\n\n            const correctAnswer = answerArr.filter(el => !el.isCorrect === true)\n            console.log(correctAnswer)\n            //console.log(correctAnswer)\n            //if (answer.isCorrect === )\n\n            increase()\n\n            dispatch({ type: \"unMount\" });\n        }\n    }, [option])\n    return (\n        <div className=\"col-12 col-md-7 m-auto\" >\n            <h3 className=\"quiz-question\">{question}</h3>\n            <span onClick={increase}>{value}</span>\n            {\n                questionOption.map(el => <div className={`quiz-option ${option === el.option ? 'active-option' : ''}`} onClick={() => {\n                    setOption(el.option);\n                    setAnswer(el)\n\n                }} >{el.option}</div>)\n            }\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    increase: () => dispatch(increaseNumber())\n})\n\nexport default connect(null, mapDispatchToProps)(Quiz);\n"]},"metadata":{},"sourceType":"module"}