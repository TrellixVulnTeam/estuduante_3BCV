{"version":3,"sources":["firebase/firebase.utilis.js","components/spinner/spinner.component.jsx","redux/user/user.selector.js","pages/user-profile/user-profile.component.jsx","components/table/table.component.jsx","components/dark-table/dark-table.component.jsx","components/dashboard-card/dashboard-card.component.jsx","components/dashboard-card-overview/dashboard-card-overview.component.jsx","pages/dashboard/dashboard.component.jsx","components/main-sidenav/main-sidenav.component.jsx","pages/exam/exam.component.jsx","redux/result/result.type.js","components/quiz/quiz.component.jsx","redux/result/result.action.js","components/quiz-demo/quiz-demo.component.jsx","utilities.js","components/private-route/private.route.component.jsx","redux/user/user.types.js","App.js","redux/user/user.action.js","reportWebVitals.js","pages/sign-in/sign-in.component.jsx","pages/signup/signUp.component.jsx","redux/result/result.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","currentUserProfile","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","CreatedAt","Date","set","average","result","isExamHasGiven","createResult","obj","examName","console","log","correctPoints","numberOfCorrectAnswers","numberOfIncorrectAnswers","numberOfQuestions","docRef","createdAt","now","update","FieldValue","arrayUnion","getResult","updateGroupResult","groupID","userId","firstName","oldObj","res","resultArr","data","forEach","el","id","arrayRemove","updateAverage","path","auth","Spinner","className","class","selectCurrentUser","createSelector","state","user","currentUser","connect","Container","style","marginTop","fluid","Row","Col","xl","Card","CardHeader","xs","CardBody","Form","lg","FormGroup","htmlFor","Input","placeholder","value","type","lastName","TableC","scope","Media","href","onClick","e","preventDefault","Badge","color","Progress","max","barClassName","DarkTable","lastResult","Table","responsive","map","DashBoardCard","CardTitle","tag","Math","floor","useState","setAverage","useEffect","getData","setLastResult","userData","setUserData","onSnapshot","window","MainSideNav","to","signOut","Exam","gradeList","setGradeList","collection","orderBy","snapshot","docs","getListOfClass","grade","backgroundColor","resultActionTypes","reducer","action","payload","Error","dispatch","increase","question","questionOption","undefined","option","setOption","setAnswer","questionOptionUn","answerArr","useReducer","correctAnswer","filter","isCorrect","quiz","setQuiz","useParams","err","onCompleteAction","arr","total","reduce","acc","cur","index","normalAvarage","mainAvarage","group","userEntry","isExamHasGiven1","some","isThereAnyExam","onComplete","PrivateRoute","exact","component","Homepage","UserProfilePage","QuizDemo","userActionTypes","setUser","SetCurrentUser","userStatus","setUserStatus","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","paper","spacing","display","flexDirection","alignItems","avatar","margin","palette","secondary","main","form","width","submit","password","userCredentials","setUserCredentials","signIn","setSignIn","classes","handleChange","target","name","handleSubmit","event","signInWithEmailAndPassword","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","onSubmit","TextField","required","fullWidth","label","FormControlLabel","control","Checkbox","Grid","container","item","Copyright","align","Link","getFullYear","confirmedPassword","signUp","setsignUp","alert","createUserWithEmailAndPassword","error","sm","autoComplete","autoFocus","onChange","justify","Box","mt","INITIAL_STATE","wrongAnswer","resultReducer","userReducer","rootReducer","combineReducers","middleWare","logger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","SignUp","SignIn","document","getElementById"],"mappings":"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","file":"static/js/main.bad356cb.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/firebase-functions\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD3q3ZnM6qejCc4NOoXjQ2xsVfVn24WdJc\",\n  authDomain: \"quiz-54a90.firebaseapp.com\",\n  projectId: \"quiz-54a90\",\n  storageBucket: \"quiz-54a90.appspot.com\",\n  messagingSenderId: \"915241107805\",\n  appId: \"1:915241107805:web:91ca6d11bb535d313828b4\",\n  measurementId: \"G-4HHYPEW7DM\",\n};\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const currentUserProfile = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const sanpshot = await userRef.get();\n\n  if (!sanpshot.exists) {\n    const { displayName, email } = userAuth;\n    const CreatedAt = new Date();\n\n    await userRef.set({\n      displayName,\n      email,\n      average: 0,\n      CreatedAt,\n      result: [],\n      isExamHasGiven: false,\n      ...additionalData,\n    });\n  }\n\n  return userRef;\n};\n\n\n\nexport const getQuestion = async (path) => {\n  const docRef = firestore.doc(`questions/${path}`);\n  const snapShot = await docRef.get();\n  return await snapShot.data();\n};\n\nexport const createResult = async (uid, obj, examName) => {\n  console.log({ uid, obj });\n  const {\n    correctPoints,\n    numberOfCorrectAnswers,\n    numberOfIncorrectAnswers,\n    numberOfQuestions,\n  } = obj;\n  let docRef = firestore.doc(`users/${uid}`);\n  const createdAt = Date.now();\n\n  await docRef.update({\n    result: firebase.firestore.FieldValue.arrayUnion({\n      correctPoints,\n      numberOfCorrectAnswers,\n      numberOfIncorrectAnswers,\n      numberOfQuestions,\n      createdAt,\n      examName,\n    }),\n  });\n};\n\nexport const getResult = async (uid) => {\n  const docRef = await firestore.doc(`users/${uid}`);\n  return docRef;\n  //const result = await docRef.get().data();\n\n  //return result;\n  //console.log(result);\n};\n\nexport const updateGroupResult = async (\n  groupID,\n  userId,\n  firstName,\n  average,\n  oldObj\n) => {\n  console.log(groupID)\n  const docRef = firestore.doc(\"result/l1aU30VzftlGgYP4Y91W\");\n  const res =  await docRef.get();\n  const resultArr = res.data()[groupID]\n  console.log(res.data())\n\n\n  if(resultArr)\n\n  resultArr.forEach( async el => {\n    console.log(el)\n    if (el.id === userId) {\n\n      //docRef.set({ [groupID]: [{ userId, firstName, average }] });\n       await docRef.update({\n        [groupID]: firebase.firestore.FieldValue.arrayRemove({ ...oldObj }),\n      });\n\n       await docRef.update({\n        [groupID]: firebase.firestore.FieldValue.arrayUnion({\n          id: userId,\n          firstName,\n          average,\n        }),\n      });\n    } else {\n      console.log('i am get logged')\n       await docRef.update({\n        [groupID]: firebase.firestore.FieldValue.arrayUnion({\n          id: userId,\n          firstName,\n          average,\n        }),\n      });\n    }\n  });\n\n\n\n\n};\n\nexport const updateAverage = async (path, average) => {\n  const docRef = firestore.doc(`users/${path}`);\n\n  await docRef.update({\n    average: average,\n  });\n};\n//firebase.functions.Functions.\n\n\nexport const firestore = firebase.firestore();\nexport const auth = firebase.auth();\n\n\n","import './spinner.styles.scss'\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-overlay\">\n            <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n    );\n}\n\nexport default Spinner;","import { createSelector } from \"reselect\";\n\nconst selectUser = (state) => state.user;\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n);\n\nexport const selectResult = createSelector([selectCurrentUser], (user) => {\n  console.log(user.result);\n  if(user) {\n     return user.result;\n  } else {\n    console.log('it null')\n    return []\n  }\n \n});\n","import React from \"react\";\n\n// reactstrap components\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    FormGroup,\n    Form,\n    Input,\n    Container,\n    Row,\n    Col\n} from \"reactstrap\";\nimport UserProfileCard from \"../../components/user-profile-card/user-profile-card.compononent\";\n\nimport { connect } from 'react-redux';\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\n\nconst UserProfilePage = ({ user }) => {\n\n\n\n    return user ? (\n        <>\n            {/* Page content */}\n            <Container style={{ marginTop: '7rem' }} className=\"mt--7\" fluid>\n                <Row>\n\n                    <Col className=\"order-xl-1\" xl=\"8\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">My account</h3>\n                                    </Col>\n\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Form>\n                                    <h6 className=\"heading-small text-muted mb-4\">\n                                        User information\n                      </h6>\n                                    <div className=\"pl-lg-4\">\n                                        <Row>\n\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-email\"\n                                                    >\n                                                        Email address\n                              </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        id=\"input-email\"\n                                                        placeholder=\"jesse@example.com\"\n                                                        value={user.email}\n                                                        type=\"email\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-first-name\"\n                                                    >\n                                                        First name\n                              </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={user.firstName}\n                                                        id=\"input-first-name\"\n                                                        placeholder=\"First name\"\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                            <Col lg=\"6\">\n                                                <FormGroup>\n                                                    <label\n                                                        className=\"form-control-label\"\n                                                        htmlFor=\"input-last-name\"\n                                                    >\n                                                        Last name\n                              </label>\n                                                    <Input\n                                                        className=\"form-control-alternative\"\n                                                        value={user.lastName}\n                                                        id=\"input-last-name\"\n                                                        placeholder=\"Last name\"\n                                                        type=\"text\"\n                                                    />\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <hr className=\"my-4\" />\n\n\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    ) : (<div>Loading</div>);\n}\n\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\nexport default connect(mapStateToProps)(UserProfilePage);\n\n","import './table.styles.scss';\nimport {\n    Badge,\n\n    Media,\n    Progress,\n\n} from \"reactstrap\";\n\nconst TableC = ({ correctPoints,\n    numberOfCorrectAnswers,\n    numberOfIncorrectAnswers,\n    numberOfQuestions,\n    examName }) => {\n\n    return (\n        <tr>\n            <th scope=\"row\">\n                <Media className=\"align-items-center\">\n                    <a\n                        className=\"avatar rounded-circle mr-3\"\n                        href=\"#pablo\"\n                        onClick={e => e.preventDefault()}\n                    >\n                    </a>\n                    <Media>\n                        <span className=\"mb-0 text-sm\">\n                            {examName}\n                           </span>\n                    </Media>\n                </Media>\n            </th>\n            <td>{numberOfQuestions * 10}</td>\n            <td>\n                <Badge color=\"\" className=\"badge-dot\">\n                    <i className=\"bg-success\" />\n                    {correctPoints}\n                </Badge>\n            </td>\n            <td>\n                {numberOfCorrectAnswers}\n            </td>\n            <td>\n                <div className=\"d-flex align-items-center\">\n                    <span className=\"mr-2\">{numberOfIncorrectAnswers}</span>\n                    <div>\n                        <Progress\n                            max=\"100\"\n                            value=\"100\"\n                            barClassName=\"bg-success\"\n                        />\n                    </div>\n                </div>\n            </td>\n\n\n        </tr>\n    );\n}\n\nexport default TableC;","import './dark-table.styles.scss';\n\nimport { connect } from 'react-redux';\n\nimport {\n    Card,\n    CardHeader,\n    Table,\n    Row,\n\n} from \"reactstrap\";\nimport TableC from '../table/table.component';\n\nconst DarkTable = ({ lastResult }) => {\n    console.log(lastResult)\n\n    return lastResult ? (\n\n        <Row className=\"mt-5\">\n            <div className=\"col\">\n                <Card className=\"bg-default shadow\">\n                    <CardHeader className=\"bg-transparent border-0\">\n                        <h3 className=\"text-white mb-0\">Last Exams</h3>\n                    </CardHeader>\n                    <Table\n                        className=\"align-items-center table-dark table-flush\"\n                        responsive\n                    >\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th scope=\"col\">Exam Name</th>\n                                <th scope=\"col\">Totla Marks</th>\n                                <th scope=\"col\">My Marks</th>\n                                <th scope=\"col\">Correct Answer</th>\n                                <th scope=\"col\">Incorrect Answer</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                lastResult.length > 0 ? lastResult.map(el => <TableC {...el} />) : (<h1 className='data'>No Data Available</h1>)\n                            }\n                        </tbody>\n                    </Table>\n                </Card>\n            </div>\n        </Row>\n    ) : (<div>Loading...</div>)\n}\n\n\nexport default DarkTable;","import './dashboard-card.styles.scss';\nimport { Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nconst DashBoardCard = ({ average }) => {\n    return (\n        <Col lg=\"6\" xl=\"4\">\n            <Card className=\"card-stats mb-4 mb-xl-0\">\n                <CardBody>\n                    <Row>\n                        <div className=\"col\">\n                            <CardTitle\n                                tag=\"h5\"\n                                className=\"text-uppercase text-muted mb-0\"\n                            >\n                                Avarage\n              </CardTitle>\n                            <span className=\"h2 font-weight-bold mb-0\">\n                                {Math.floor(average)}\n              </span>\n                        </div>\n                        <Col className=\"col-auto\">\n                            <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                                <i className=\"fas fa-chart-bar\" />\n                            </div>\n                        </Col>\n                    </Row>\n\n                </CardBody>\n            </Card>\n        </Col>\n    );\n}\n\nexport default DashBoardCard;","import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { firestore } from '../../firebase/firebase.utilis';\nimport { selectCurrentUser } from '../../redux/user/user.selector';\nimport { totalAvarage } from '../../utilities';\nimport DashBoardCard from \"../dashboard-card/dashboard-card.component\";\n\nconst card = [1, 2, 3]\n\nconst DashboardCardOverview = ({ lastResult, user }) => {\n    const [average, setAverage] = useState();\n    console.log(lastResult)\n\n\n    useEffect(() => {\n\n        if (user) {\n            const getData = async () => {\n                const docRef = await firestore.doc(`users/${user.id}`).get();\n                const data = docRef.data();\n                setAverage(data.average)\n                console.log(data.average)\n\n            }\n\n            getData()\n        }\n\n\n    }, [user])\n\n\n\n\n\n    return lastResult ? (\n        <div className=\"row\">\n            <DashBoardCard average={average} />\n        </div>\n    ) : (<div>Loading...</div>);\n}\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\nexport default connect(mapStateToProps)(DashboardCardOverview);","import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport DarkTable from \"../../components/dark-table/dark-table.component\";\nimport DashboardCardOverview from \"../../components/dashboard-card-overview/dashboard-card-overview.component\";\n\nimport { firestore, getResult } from '../../firebase/firebase.utilis'\nimport { selectCurrentUser } from '../../redux/user/user.selector';\n\nconst Homepage = ({ user }) => {\n    const [lastResult, setLastResult] = useState();\n    const [userData, setUserData] = useState()\n\n    useEffect(() => {\n        const getResult = async () => {\n            const docRef = firestore.doc('result/0Lsbc5zdNsXsMJHSeP1u');\n            const data = await docRef.get();\n            console.log(data.data())\n\n        }\n        getResult()\n    }, [])\n    useEffect(() => {\n        if (user) {\n            const getData = async () => {\n                if (user) {\n                    const docRef = await getResult(user.id);\n                    docRef.onSnapshot(el => {\n                        setLastResult(el.data().result)\n                    })\n\n                }\n\n\n            }\n            getData();\n            setUserData(user)\n        } else {\n            setUserData(null)\n        }\n\n\n    }, [userData])\n\n    window.value = 12\n\n\n   \n    return (\n        <>\n            <DashboardCardOverview lastResult={lastResult} />\n            <DarkTable lastResult={lastResult} />\n\n        </>\n\n\n    );\n}\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\nexport default connect(mapStateToProps)(Homepage);","import './main-sidenav.styles.scss';\nimport { Link } from 'react-router-dom'\nimport { auth } from '../../firebase/firebase.utilis';\n\n//fas fa-user fas fa-list-ul\n\nconst MainSideNav = () => {\n    return (\n        <>\n            <nav class=\"sidenav\">\n                <div class=\"logo-box\">Logo Here</div>\n                <ul class=\"sidenav-items\">\n                    <li class=\"dashboard item\">\n                        <Link to='/' class=\"link link1 \"\n                        ><i className='fas r fa-tv'></i><span className=\"f-fam\" >DashBoard</span></Link>\n                    </li>\n\n                    <li class=\"dashboard item\">\n                        <Link to='/userprofile' class=\"link link1 \"\n                        ><i className='fas r fa-user'></i><span className=\"f-fam\" >User</span></Link>\n                    </li>\n                    <li class=\"dashboard item\">\n                        <Link to='/exam' class=\"link link1 \"\n                        ><i class=\"far r fa-copy \"></i><span className=\"f-fam rr\" >Take Exam</span></Link>\n                    </li>\n                    <li class=\"dashboard item\">\n                        <span class=\"link link1\" onClick={() => auth.signOut()}\n                        ><i class=\"fas r fa-sign-out-alt\"></i><span className=\"f-fam \" >Sign Out</span></span>\n                    </li>\n\n\n                </ul>\n            </nav>\n        </>\n    );\n}\n\n\n\nexport default MainSideNav;","import { useState, useEffect } from 'react';\nimport './exam.styles.scss';\nimport { Link } from 'react-router-dom';\nimport { firestore } from '../../firebase/firebase.utilis';\n\n\n\nconst Exam = () => {\n    const [gradeList, setGradeList] = useState(null)\n    useEffect(() => {\n\n\n\n        const getListOfClass = async () => {\n            const snapshot = await firestore.collection('questions').orderBy('grade').get()\n            setGradeList(snapshot.docs.map(doc => doc.data()));\n        }\n        getListOfClass()\n\n        return () => {\n        }\n\n    }, [])\n    console.log(gradeList)\n\n    return gradeList ? (\n        <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <h1>Choose Your class</h1>\n\n                {\n                    gradeList.map(el => (<div className=\"student-class\">\n                        <Link to={`/exam/${el.id}`}>\n                            {el.grade}\n                    <span style={{ backgroundColor: '#e74c3c' }} className=\"student-class__outlined\">&nbsp;</span>\n                        </Link>\n\n                    </div>))\n                }\n            </div>\n        </div>\n    ) : (<div>Loading...</div>);\n}\n\nexport default Exam;","export const resultActionTypes = {\n  SET_RESULT: \"SET_RESULT\",\n  INCREASE_CORRECTANSWER: \"INCREASE_CORRECTANSWER\",\n  DECREASE_CORRECTANSWER: \"DECREASE_CORRECTANSWER\",\n};\n","import { useState, useEffect, useReducer } from 'react'\nimport './quiz.styles.scss';\nimport { connect } from 'react-redux';\nimport { increaseNumber } from '../../redux/result/result.action';\n\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"set\":\n            return action.payload;\n        case \"unMount\":\n            console.log(state); // This note has been closed: 201\n            break;\n        default:\n            throw new Error();\n    }\n}\n\nconst Quiz = ({ question, questionOption, increase }) => {\n    const [option, setOption] = useState(undefined)\n    const [answer, setAnswer] = useState();\n    const [questionOptionUn, setquestionOptionUn] = useState(questionOption);\n    let problem = option;\n    let answerArr = questionOptionUn;\n    const [value, dispatch] = useReducer(reducer, 'nothing')\n    useEffect(() => {\n        dispatch({ type: \"set\", payload: option });\n        return () => {\n\n            const correctAnswer = answerArr.filter(el => !el.isCorrect === true)\n            console.log(correctAnswer)\n            //console.log(correctAnswer)\n            //if (answer.isCorrect === )\n\n            increase()\n\n            dispatch({ type: \"unMount\" });\n        }\n    }, [option])\n    return (\n        <div className=\"col-12 col-md-7 m-auto\" >\n            <h3 className=\"quiz-question\">{question}</h3>\n            <span onClick={increase}>{value}</span>\n            {\n                questionOption.map(el => <div className={`quiz-option ${option === el.option ? 'active-option' : ''}`} onClick={() => {\n                    setOption(el.option);\n                    setAnswer(el)\n\n                }} >{el.option}</div>)\n            }\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    increase: () => dispatch(increaseNumber())\n})\n\nexport default connect(null, mapDispatchToProps)(Quiz);\n","import { resultActionTypes } from \"./result.type\";\n\nexport const setCurrentAnswer = (answer) => ({\n  type: resultActionTypes.SET_RESULT,\n  payload: answer,\n});\n\nexport const increaseNumber = () => ({\n  type: resultActionTypes.INCREASE_CORRECTANSWER,\n});\n\nexport const decreaseNumber = () => ({\n  type: resultActionTypes.DECREASE_CORRECTANSWER,\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport { useState, useEffect } from 'react';\nimport Quiz from 'react-quiz-component';\nimport { connect } from 'react-redux';\n\nimport { createResult, firestore, updateAverage, updateGroupResult } from '../../firebase/firebase.utilis';\nimport { totalAvarage } from './../../utilities'\n\nimport { selectCurrentUser } from '../../redux/user/user.selector';\nimport { useParams } from 'react-router-dom';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\nconst checkUserExist = (id, userID) => {\n\n    return id === userID\n\n}\n\nconst QuizDemo = ({ user }) => {\n    const [quiz, setQuiz] = useState();\n    const { id } = useParams();\n\n    useEffect(() => {\n        const getData = async () => {\n            const docRef = await firestore.doc(`questions/${id}`).get()\n            const data = docRef.data()\n            try {\n                setQuiz(data);\n\n            } catch (err) {\n                console.log(err)\n\n            }\n        }\n        getData()\n\n    }, [id])\n\n    const onCompleteAction = async (obj) => {\n\n        if (obj.numberOfCorrectAnswers === 0 && obj.numberOfIncorrectAnswers === 0) {\n            console.log('i am 0')\n\n        } else {\n\n            const total = totalAvarage(user.result, obj.correctPoints);\n            const normalAvarage = total / user.result.length;\n            const mainAvarage = (total + obj.correctPoints) / (user.result.length + 1)\n            const oldObj = {\n                firstName: user.firstName,\n                id: user.id,\n                average: normalAvarage\n            }\n\n            await createResult(user.id, obj, quiz.examName);\n            await updateGroupResult(user.group, user.id, user.firstName, mainAvarage, oldObj);\n            await updateAverage(user.id, mainAvarage);\n\n            const userRef = firestore.doc(`questions/${id}`)\n            await userRef.update({\n                userEntry: firebase.firestore.FieldValue.arrayUnion({\n                    id: user.id\n                })\n\n\n            }) \n\n\n        }\n\n\n        // YOUR LOGIC GOES HERE\n    }\n    if (user && quiz) {\n\n\n        let isExamHasGiven1 = quiz.userEntry.some(el => el.id === user.id)\n        console.log(isExamHasGiven1)\n\n\n\n\n        if (user.grade !== quiz.grade) {\n            return (<div> You are not permitted to give exam in this grade </div>)\n        }\n        else if (quiz.isThereAnyExam === false) {\n            return (<div>There Is no exam Today</div>)\n        }\n        else if (isExamHasGiven1 === false && quiz.isThereAnyExam === true) {\n            return quiz ? (<Quiz quiz={quiz.question} onComplete={onCompleteAction} />) : (<div>Loading...</div>);\n        } else if (isExamHasGiven1 === true) {\n            return (<div>You have Already give your exam</div>)\n        }\n    } else {\n        return (<div>Loading..</div>)\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\n\nexport default connect(mapStateToProps)(QuizDemo);","export const totalAvarage = (arr, currentMarks) => {\n  const total = arr.reduce((acc, cur, index, arr) => {\n    return acc + cur.correctPoints;\n  }, 0);\n  return total;\n};\n","import './private-route.styles.scss';\n\n\n\nimport UserProfilePage from '../../pages/user-profile/user-profile.component';\nimport Homepage from '../../pages/dashboard/dashboard.component';\nimport { Route, Switch } from 'react-router-dom'\nimport MainSideNav from '../main-sidenav/main-sidenav.component';\nimport Exam from '../../pages/exam/exam.component';\nimport QuizOverview from '../quiz-overview/quiz-overview.component';\nimport QuizDemo from '../quiz-demo/quiz-demo.component';\n\nconst PrivateRoute = () => {\n\n    //if (!isUserAuthenticated) {\n    //    return (\n    //        <Redirect to=\"/login\" />\n    //    )\n    //}\n\n    return (\n        <div className=\"container-c\">\n\n            <MainSideNav />\n            \n\n            <main className=\"main-content\">\n                <Switch>\n                    <Route exact path='/' component={Homepage} />\n                    <Route exact path='/userprofile' component={UserProfilePage} />\n                    <Route exact path='/exam' component={Exam} />\n                    <Route exact path='/exam/:id' component={QuizDemo} />\n                </Switch>\n            </main>\n\n\n        </div>\n\n    );\n}\n\nexport default PrivateRoute;","export const userActionTypes = {\n    SET_CURRENT_USER:'SET_CURRENT_USER'\n}","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\n\nimport { Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { auth, currentUserProfile } from \"./firebase/firebase.utilis\";\nimport Spinner from \"./components/spinner/spinner.component\";\nimport PrivateRoute from \"./components/private-route/private.route.component\";\nimport { SetCurrentUser } from \"./redux/user/user.action\";\n\nconst App = ({ setUser }) => {\n  const [userStatus, setUserStatus] = useState(undefined);\n  useEffect(() => {\n    auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const docRef = await currentUserProfile(userAuth);\n\n        docRef.onSnapshot((snapshot) => {\n          console.log(snapshot.data());\n          setUserStatus(snapshot.data());\n\n          setUser({ id: snapshot.id, ...snapshot.data() });\n        });\n      } else {\n        setUserStatus(userAuth);\n\n      }\n    });\n  }, []);\n\n  if (userStatus === undefined) {\n    return <Spinner />;\n  } else if (userStatus === null) {\n    return <Redirect to=\"/signin\" />;\n  } else if (userStatus) {\n    console.log(userStatus)\n    return (\n      <div className=\"App\">\n        <Switch>\n          <PrivateRoute />\n        </Switch>\n      </div>\n    );\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUser: (user) => dispatch(SetCurrentUser(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { userActionTypes } from './user.types'\n\n\nexport const SetCurrentUser = user => ({\n    type:userActionTypes.SET_CURRENT_USER,\n    payload:user\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { auth } from '../../firebase/firebase.utilis';\nimport { connect } from 'react-redux'\nimport { selectCurrentUser } from '../../redux/user/user.selector';\nimport { Redirect } from 'react-router';\n\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = ({ user }) => {\n    const [userCredentials, setUserCredentials] = useState({ email: '', password: '' });\n    const { email, password } = userCredentials;\n    const [signIn, setSignIn] = useState(false);\n\n    const classes = useStyles();\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setUserCredentials({ ...userCredentials, [name]: value })\n    }\n    const handleSubmit = async event => {\n        event.preventDefault();\n        try {\n            const user = await auth.signInWithEmailAndPassword(email, password);\n            setUserCredentials({ email: '', password: '' });\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    };\n    if (user) {\n        return <Redirect to='/' />\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={handleSubmit} >\n                    <TextField\n                        name='email'\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        name='password'\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={handleChange}\n\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => setSignIn(true)}\n                    >\n                        {signIn ? 'Sign In...' : 'Sign In'}\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n\n                        </Grid>\n                        <Grid item>\n                            <Link to='/signup' variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n\n        </Container>\n    );\n}\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\n\nexport default connect(mapStateToProps)(SignIn);","import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { auth, currentUserProfile } from '../../firebase/firebase.utilis';\nimport { connect } from 'react-redux'\nimport { selectCurrentUser } from '../../redux/user/user.selector';\nimport { Redirect } from 'react-router';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignUp = ({ user }) => {\n    const [userCredentials, setUserCredentials] = useState({ firstName: '', lastName: '', email: '', password: '', confirmedPassword: '', grade: '', group: '' });\n    const { firstName, lastName, email, password, confirmedPassword, grade, group } = userCredentials;\n    const [signUp, setsignUp] = useState(false);\n    const classes = useStyles();\n\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setUserCredentials({ ...userCredentials, [name]: value })\n    }\n    const handleSubmit = async e => {\n        e.preventDefault();\n        if (password !== confirmedPassword) {\n            alert(\"passwords don't match\");\n            return;\n        }\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(\n                email,\n                password\n            );\n            await currentUserProfile(user, { firstName, lastName, grade, group });\n\n            setUserCredentials({\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: '',\n                confirmedPassword: '',\n                grade: '',\n                group: ''\n            });\n        } catch (error) {\n            setsignUp(false)\n            console.error(error);\n        }\n\n    }\n    if (user) {\n        console.log(user)\n        return <Redirect to='/' />\n    }\n\n\n    return (\n        <>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n        </Typography>\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name='firstName'\n                                    autoComplete=\"fname\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    value={firstName}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    name='lastName'\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    autoComplete=\"lname\"\n                                    value={lastName}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name='email'\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    autoComplete=\"email\"\n                                    value={email}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name='password'\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={password}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name='confirmedPassword'\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    label=\"confirmed Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={confirmedPassword}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name='grade'\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"grade\"\n                                    label=\"Grade\"\n                                    autoFocus\n                                    value={grade}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name='group'\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"grade\"\n                                    label=\"Group\"\n                                    autoFocus\n                                    value={group}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={() => setsignUp(true)}\n                        >\n                            {signUp ? 'creating account...' : 'sign up'}\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Already have an account? Sign in\n              </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Box mt={5}>\n                    <Copyright />\n                </Box>\n            </Container >\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    user: selectCurrentUser(state)\n})\n\nexport default connect(mapStateToProps)(SignUp);","import { resultActionTypes } from \"./result.type\";\n\nconst INITIAL_STATE = {\n  result: null,\n  correctAnswer: 0,\n  wrongAnswer: 0,\n};\n\nconst resultReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case resultActionTypes.SET_RESULT:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n\n    case resultActionTypes.INCREASE_CORRECTANSWER:\n      return {\n        ...state,\n        correctAnswer: state.correctAnswer + 1,\n      };\n    case resultActionTypes.DECREASE_CORRECTANSWER:\n      return {\n        ...state,\n        wrongAnswer: state.wrongAnswer + 1,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default resultReducer;\n","import { userActionTypes } from './user.types'\n\nconst INITIAL_STATE = {\n    currentUser:null\n}\n\nconst userReducer = (state = INITIAL_STATE,action) => {\n\n    switch(action.type){\n        case userActionTypes.SET_CURRENT_USER:\n            return {\n                ...state,\n                currentUser:action.payload\n            }\n\n        default:\n            return state;\n\n    }\n}\n\nexport default userReducer;","import { combineReducers } from \"redux\";\nimport resultReducer from \"./result/result.reducer\";\n\nimport userReducer from \"./user/user.reducer\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  result: resultReducer,\n});\nexport default rootReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n\nconst middleWare = [logger];\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport SignIn from \"./pages/sign-in/sign-in.component\";\nimport SignUp from \"./pages/signup/signUp.component\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/signin\" component={SignIn} />\n\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}